<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.crm.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.crm.entity.Task">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="remind_time" jdbcType="TIMESTAMP" property="remindTime" />
    <result column="done" jdbcType="BIT" property="done" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="sale_id" jdbcType="INTEGER" property="saleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, finish_time, remind_time, done, account_id, cust_id, sale_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.crm.entity.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.crm.entity.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.kaishengit.crm.entity.Task">
    insert into task (id, title, finish_time,
    remind_time, done, account_id,
    cust_id, sale_id, create_time
    )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{finishTime,jdbcType=VARCHAR},
    #{remindTime,jdbcType=VARCHAR}, #{done,jdbcType=TINYINT}, #{accountId,jdbcType=INTEGER},
    #{custId,jdbcType=INTEGER}, #{saleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
    )
  </insert>

  <!--<insert id="insert" parameterType="com.kaishengit.crm.entity.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task (title, finish_time, remind_time, 
      done, account_id, cust_id, 
      sale_id, create_time)
    values (#{title,jdbcType=VARCHAR}, #{finishTime,jdbcType=TIMESTAMP}, #{remindTime,jdbcType=TIMESTAMP}, 
      #{done,jdbcType=BIT}, #{accountId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, 
      #{saleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>-->

  <insert id="insertSelective" parameterType="com.kaishengit.crm.entity.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="remindTime != null">
        remind_time,
      </if>
      <if test="done != null">
        done,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="saleId != null">
        sale_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remindTime != null">
        #{remindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="done != null">
        #{done,jdbcType=BIT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="saleId != null">
        #{saleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.crm.entity.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!--根据accountId和显示状态查询符合要求的task对象-->
  <select id="findTaskByAccountId" resultMap="taskLoadCutomerAndSaleChance">
    SELECT
          task.*, cust.cust_name,
          cust.position,
          cust.mobile,
          cust.address,
          cust.industry,
          cust.source,
          cust.`level`,
          cust.remark,
          cust.account_id AS cust_account_id,
          cust.last_contact_time,
          cust.create_time AS cust_create_time,
          cust.update_time,
          cust.reminder,
          cust.sex,
          sale.`name`,
          sale.cust_id AS sale_cust_id,
          sale.worth,
          sale.progress,
          sale.content,
          sale.create_time AS sale_create_time,
          sale.last_time,
          sale.account_id AS sale_account_id
      FROM
          task
      LEFT JOIN customer AS cust ON task.cust_id = cust.id
      LEFT JOIN salechance AS sale ON task.sale_id = sale.id
      WHERE
          task.account_id = #{accountId}
          <if test="not showAll">
            and task.done = 0
          </if>
          order by task.finish_time asc

  </select>

  <!--对应的结果集-->
  <resultMap id="taskLoadCutomerAndSaleChance" type="Task">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="finish_time" jdbcType="VARCHAR" property="finishTime"/>
    <result column="remind_time" jdbcType="VARCHAR" property="remindTime"/>
    <result column="done" jdbcType="TINYINT" property="done"/>
    <result column="account_id" jdbcType="INTEGER" property="accountId"/>
    <result column="cust_id" jdbcType="INTEGER" property="custId"/>
    <result column="sale_id" jdbcType="INTEGER" property="saleId"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <association property="customer" javaType="Customer">
      <id column="cust_id" jdbcType="INTEGER" property="id"/>
      <result column="cust_name" jdbcType="VARCHAR" property="custName"/>
      <result column="position" jdbcType="VARCHAR" property="position"/>
      <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
      <result column="address" jdbcType="VARCHAR" property="address"/>
      <result column="industry" jdbcType="VARCHAR" property="industry"/>
      <result column="source" jdbcType="VARCHAR" property="source"/>
      <result column="level" jdbcType="VARCHAR" property="level"/>
      <result column="remark" jdbcType="VARCHAR" property="remark"/>
      <result column="cust_account_id" jdbcType="INTEGER" property="accountId"/>
      <result column="last_contact_time" jdbcType="TIMESTAMP" property="lastContactTime"/>
      <result column="cust_create_time" jdbcType="TIMESTAMP" property="createTime"/>
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
      <result column="reminder" jdbcType="VARCHAR" property="reminder"/>
      <result column="sex" jdbcType="VARCHAR" property="sex"/>
    </association>
    <association property="salechance" javaType="Salechance">
      <id column="sale_id" jdbcType="INTEGER" property="id"/>
      <result column="name" jdbcType="VARCHAR" property="name"/>
      <result column="sale_cust_id" jdbcType="INTEGER" property="custId"/>
      <result column="worth" jdbcType="REAL" property="worth"/>
      <result column="progress" jdbcType="VARCHAR" property="progress"/>
      <result column="sale_create_time" jdbcType="TIMESTAMP" property="createTime"/>
      <result column="last_time" jdbcType="TIMESTAMP" property="lastTime"/>
      <result column="sale_account_id" jdbcType="INTEGER" property="accountId"/>
    </association>
  </resultMap>

  <!--根据customerId查询对应的task对象-->
  <select id="findTaskByCustomerId" resultType="com.kaishengit.crm.entity.Task">
    SELECT
        *
    FROM
        `task`
    WHERE
        cust_id = #{custId};
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remindTime != null">
        remind_time = #{record.remindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.done != null">
        done = #{record.done,jdbcType=BIT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.saleId != null">
        sale_id = #{record.saleId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      remind_time = #{record.remindTime,jdbcType=TIMESTAMP},
      done = #{record.done,jdbcType=BIT},
      account_id = #{record.accountId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      sale_id = #{record.saleId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.crm.entity.Task">
    update task
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remindTime != null">
        remind_time = #{remindTime,jdbcType=TIMESTAMP},
      </if>
      <if test="done != null">
        done = #{done,jdbcType=BIT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="saleId != null">
        sale_id = #{saleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.crm.entity.Task">
    update task
    set title = #{title,jdbcType=VARCHAR},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      remind_time = #{remindTime,jdbcType=TIMESTAMP},
      done = #{done,jdbcType=BIT},
      account_id = #{accountId,jdbcType=INTEGER},
      cust_id = #{custId,jdbcType=INTEGER},
      sale_id = #{saleId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>